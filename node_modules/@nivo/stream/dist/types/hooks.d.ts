import { StreamCommonProps, StreamCustomLayerProps, StreamDataProps, StreamDatum, StreamLayerData, StreamLayerDatum, StreamSliceData } from './types';
export declare const useStream: <RawDatum extends StreamDatum>({ width, height, data, keys, label, valueFormat, offsetType, order, curve, colors, borderColor, dotSize, dotColor, dotBorderWidth, dotBorderColor, }: {
    width: number;
    height: number;
    data: StreamDataProps<RawDatum>["data"];
    keys: StreamDataProps<RawDatum>["keys"];
    label?: StreamCommonProps<RawDatum>["label"];
    valueFormat?: StreamCommonProps<RawDatum>["valueFormat"];
    offsetType?: StreamCommonProps<RawDatum>["offsetType"];
    order?: StreamCommonProps<RawDatum>["order"];
    curve?: StreamCommonProps<RawDatum>["curve"];
    colors?: StreamCommonProps<RawDatum>["colors"];
    dotSize?: StreamCommonProps<RawDatum>["dotSize"];
    dotColor?: StreamCommonProps<RawDatum>["dotColor"];
    dotBorderWidth?: StreamCommonProps<RawDatum>["dotBorderWidth"];
    dotBorderColor?: StreamCommonProps<RawDatum>["dotBorderColor"];
    borderColor?: StreamCommonProps<RawDatum>["borderColor"];
}) => {
    xScale: import("@nivo/scales").ScalePoint<number>;
    yScale: import("@nivo/scales").ScaleLinear<number>;
    layers: StreamLayerData[];
    slices: StreamSliceData[];
    getBorderColor: import("@nivo/colors").InheritedColorConfigCustomFunction<StreamLayerData> | ((d: StreamLayerData) => any);
    getDotSize: (datum: StreamLayerDatum) => number;
    getDotColor: import("@nivo/colors").InheritedColorConfigCustomFunction<StreamLayerDatum> | ((d: StreamLayerDatum) => any);
    getDotBorderWidth: (datum: StreamLayerDatum) => number;
    getDotBorderColor: import("@nivo/colors").InheritedColorConfigCustomFunction<StreamLayerDatum> | ((d: StreamLayerDatum) => any);
    layerContext: StreamCustomLayerProps;
};
//# sourceMappingURL=hooks.d.ts.map