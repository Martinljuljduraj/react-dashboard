import {
  V,
  W,
  Y2 as Y,
  j,
  q,
  require_baseEach,
  require_baseIteratee,
  require_uniqBy,
  sn
} from "./chunk-OD3UL4UA.js";
import {
  $r,
  Dr,
  E2 as E,
  Fr,
  It,
  L,
  Mn,
  Pt,
  Rn,
  Rt,
  T,
  Ye,
  animated,
  bn,
  cn,
  ct,
  d,
  diverging_default,
  f,
  ft,
  gn,
  hn,
  ht,
  kn,
  pr,
  require_Stack,
  require_Symbol,
  require_arrayFilter,
  require_arrayMap,
  require_arrayPush,
  require_assignValue,
  require_baseGet,
  require_baseGetAllKeys,
  require_baseGetTag,
  require_baseUnary,
  require_castPath,
  require_cloneArrayBuffer,
  require_cloneBuffer,
  require_cloneTypedArray,
  require_copyArray,
  require_copyObject,
  require_flatRest,
  require_getAllKeys,
  require_getPrototype,
  require_getSymbols,
  require_getTag,
  require_initCloneObject,
  require_isArray,
  require_isBuffer,
  require_isObject,
  require_isObjectLike,
  require_isPlainObject,
  require_keys,
  require_keysIn,
  require_last,
  require_nodeUtil,
  require_stubArray,
  require_toKey,
  stack_default,
  to,
  u,
  useSpring,
  useTransition,
  ut,
  wn,
  z,
  z2
} from "./chunk-SJB3HMNW.js";
import "./chunk-A35ZXVDQ.js";
import {
  require_jsx_runtime
} from "./chunk-B2GAMZSM.js";
import {
  require_react
} from "./chunk-WHMHD7EJ.js";
import {
  __commonJS,
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/lodash/_baseFilter.js
var require_baseFilter = __commonJS({
  "node_modules/lodash/_baseFilter.js"(exports, module) {
    var baseEach = require_baseEach();
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection2) {
        if (predicate(value, index, collection2)) {
          result.push(value);
        }
      });
      return result;
    }
    module.exports = baseFilter;
  }
});

// node_modules/lodash/filter.js
var require_filter = __commonJS({
  "node_modules/lodash/filter.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var baseFilter = require_baseFilter();
    var baseIteratee = require_baseIteratee();
    var isArray = require_isArray();
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, baseIteratee(predicate, 3));
    }
    module.exports = filter;
  }
});

// node_modules/lodash/isNumber.js
var require_isNumber = __commonJS({
  "node_modules/lodash/isNumber.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var numberTag = "[object Number]";
    function isNumber(value) {
      return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
    }
    module.exports = isNumber;
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    function arrayEach(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports, module) {
    var copyObject = require_copyObject();
    var keys = require_keys();
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }
    module.exports = baseAssign;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }
    module.exports = baseAssignIn;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }
    module.exports = copySymbols;
  }
});

// node_modules/lodash/_getSymbolsIn.js
var require_getSymbolsIn = __commonJS({
  "node_modules/lodash/_getSymbolsIn.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var getPrototype = require_getPrototype();
    var getSymbols = require_getSymbols();
    var stubArray = require_stubArray();
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };
    module.exports = getSymbolsIn;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }
    module.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_getAllKeysIn.js
var require_getAllKeysIn = __commonJS({
  "node_modules/lodash/_getAllKeysIn.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn = require_keysIn();
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }
    module.exports = getAllKeysIn;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports, module) {
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function initCloneArray(array) {
      var length = array.length, result = new array.constructor(length);
      if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports, module) {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports, module) {
    var Symbol = require_Symbol();
    var symbolProto = Symbol ? Symbol.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);
        case boolTag:
        case dateTag:
          return new Ctor(+object);
        case dataViewTag:
          return cloneDataView(object, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object);
        case regexpTag:
          return cloneRegExp(object);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object);
      }
    }
    module.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports, module) {
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports, module) {
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports, module) {
    var Stack = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject = require_isObject();
    var isSet = require_isSet();
    var keys = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key2) {
          result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key2) {
        if (props) {
          key2 = subValue;
          subValue = value[key2];
        }
        assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  }
});

// node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "node_modules/lodash/_baseSlice.js"(exports, module) {
    function baseSlice(array, start, end) {
      var index = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    module.exports = baseSlice;
  }
});

// node_modules/lodash/_parent.js
var require_parent = __commonJS({
  "node_modules/lodash/_parent.js"(exports, module) {
    var baseGet = require_baseGet();
    var baseSlice = require_baseSlice();
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }
    module.exports = parent;
  }
});

// node_modules/lodash/_baseUnset.js
var require_baseUnset = __commonJS({
  "node_modules/lodash/_baseUnset.js"(exports, module) {
    var castPath = require_castPath();
    var last = require_last();
    var parent = require_parent();
    var toKey = require_toKey();
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }
    module.exports = baseUnset;
  }
});

// node_modules/lodash/_customOmitClone.js
var require_customOmitClone = __commonJS({
  "node_modules/lodash/_customOmitClone.js"(exports, module) {
    var isPlainObject = require_isPlainObject();
    function customOmitClone(value) {
      return isPlainObject(value) ? void 0 : value;
    }
    module.exports = customOmitClone;
  }
});

// node_modules/lodash/omit.js
var require_omit = __commonJS({
  "node_modules/lodash/omit.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseClone = require_baseClone();
    var baseUnset = require_baseUnset();
    var castPath = require_castPath();
    var copyObject = require_copyObject();
    var customOmitClone = require_customOmitClone();
    var flatRest = require_flatRest();
    var getAllKeysIn = require_getAllKeysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });
    module.exports = omit;
  }
});

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_react2 = __toESM(require_react(), 1);

// node_modules/@nivo/annotations/dist/nivo-annotations.mjs
var import_react = __toESM(require_react(), 1);
var import_filter = __toESM(require_filter(), 1);
var import_isNumber = __toESM(require_isNumber(), 1);
var import_omit = __toESM(require_omit(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
function g() {
  return g = Object.assign ? Object.assign.bind() : function(t3) {
    for (var n3 = 1; n3 < arguments.length; n3++) {
      var i3 = arguments[n3];
      for (var o4 in i3) ({}).hasOwnProperty.call(i3, o4) && (t3[o4] = i3[o4]);
    }
    return t3;
  }, g.apply(null, arguments);
}
var k = { dotSize: 4, noteWidth: 120, noteTextOffset: 8, animate: true };
var W2 = function(n3) {
  var i3 = typeof n3;
  return (0, import_react.isValidElement)(n3) || "string" === i3 || "function" === i3 || "object" === i3;
};
var v = function(t3) {
  var n3 = typeof t3;
  return "string" === n3 || "function" === n3;
};
var b = function(t3) {
  return "circle" === t3.type;
};
var w = function(t3) {
  return "dot" === t3.type;
};
var z3 = function(t3) {
  return "rect" === t3.type;
};
var P = function(t3) {
  var n3 = t3.data, i3 = t3.annotations, e3 = t3.getPosition, r2 = t3.getDimensions;
  return i3.reduce(function(t4, i4) {
    var s = i4.offset || 0;
    return [].concat(t4, (0, import_filter.default)(n3, i4.match).map(function(t5) {
      var n4 = e3(t5), o4 = r2(t5);
      return (b(i4) || z3(i4)) && (o4.size = o4.size + 2 * s, o4.width = o4.width + 2 * s, o4.height = o4.height + 2 * s), g({}, (0, import_omit.default)(i4, ["match", "offset"]), n4, o4, { size: i4.size || o4.size, datum: t5 });
    }));
  }, []);
};
var C = function(t3, n3, i3, o4) {
  var e3 = Math.atan2(o4 - n3, i3 - t3);
  return ht(ct(e3));
};
var S = function(t3) {
  var n3, i3, o4 = t3.x, a3 = t3.y, r2 = t3.noteX, s = t3.noteY, h = t3.noteWidth, d2 = void 0 === h ? k.noteWidth : h, c = t3.noteTextOffset, f2 = void 0 === c ? k.noteTextOffset : c;
  if ((0, import_isNumber.default)(r2)) n3 = o4 + r2;
  else {
    if (void 0 === r2.abs) throw new Error("noteX should be either a number or an object containing an 'abs' property");
    n3 = r2.abs;
  }
  if ((0, import_isNumber.default)(s)) i3 = a3 + s;
  else {
    if (void 0 === s.abs) throw new Error("noteY should be either a number or an object containing an 'abs' property");
    i3 = s.abs;
  }
  var y = o4, x2 = a3, m2 = C(o4, a3, n3, i3);
  if (b(t3)) {
    var p2 = ft(ut(m2), t3.size / 2);
    y += p2.x, x2 += p2.y;
  }
  if (z3(t3)) {
    var g2 = Math.round((m2 + 90) / 45) % 8;
    0 === g2 && (x2 -= t3.height / 2), 1 === g2 && (y += t3.width / 2, x2 -= t3.height / 2), 2 === g2 && (y += t3.width / 2), 3 === g2 && (y += t3.width / 2, x2 += t3.height / 2), 4 === g2 && (x2 += t3.height / 2), 5 === g2 && (y -= t3.width / 2, x2 += t3.height / 2), 6 === g2 && (y -= t3.width / 2), 7 === g2 && (y -= t3.width / 2, x2 -= t3.height / 2);
  }
  var W3 = n3, v2 = n3;
  return (m2 + 90) % 360 > 180 ? (W3 -= d2, v2 -= d2) : v2 += d2, { points: [[y, x2], [n3, i3], [v2, i3]], text: [W3, i3 - f2], angle: m2 + 90 };
};
var O = function(t3) {
  var i3 = t3.data, o4 = t3.annotations, e3 = t3.getPosition, a3 = t3.getDimensions;
  return (0, import_react.useMemo)(function() {
    return P({ data: i3, annotations: o4, getPosition: e3, getDimensions: a3 });
  }, [i3, o4, e3, a3]);
};
var j2 = function(t3) {
  var i3 = t3.annotations;
  return (0, import_react.useMemo)(function() {
    return i3.map(function(t4) {
      return g({}, t4, { computed: S(g({}, t4)) });
    });
  }, [i3]);
};
var M = function(t3) {
  return (0, import_react.useMemo)(function() {
    return S(t3);
  }, [t3]);
};
var T2 = function(t3) {
  var n3 = t3.datum, o4 = t3.x, e3 = t3.y, r2 = t3.note, s = z(), l2 = Dr(), u2 = l2.animate, d2 = l2.config, k2 = useSpring({ x: o4, y: e3, config: d2, immediate: !u2 });
  return "function" == typeof r2 ? (0, import_react.createElement)(r2, { x: o4, y: e3, datum: n3 }) : (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [s.annotations.text.outlineWidth > 0 && (0, import_jsx_runtime.jsx)(animated.text, { x: k2.x, y: k2.y, style: g({}, s.annotations.text, { strokeLinejoin: "round", strokeWidth: 2 * s.annotations.text.outlineWidth, stroke: s.annotations.text.outlineColor }), children: r2 }), (0, import_jsx_runtime.jsx)(animated.text, { x: k2.x, y: k2.y, style: (0, import_omit.default)(s.annotations.text, ["outlineWidth", "outlineColor"]), children: r2 })] });
};
var E2 = function(t3) {
  var i3 = t3.points, o4 = t3.isOutline, e3 = void 0 !== o4 && o4, a3 = z(), r2 = (0, import_react.useMemo)(function() {
    var t4 = i3[0];
    return i3.slice(1).reduce(function(t5, n3) {
      return t5 + " L" + n3[0] + "," + n3[1];
    }, "M" + t4[0] + "," + t4[1]);
  }, [i3]), s = It(r2);
  if (e3 && a3.annotations.link.outlineWidth <= 0) return null;
  var l2 = g({}, a3.annotations.link);
  return e3 && (l2.strokeLinecap = "square", l2.strokeWidth = a3.annotations.link.strokeWidth + 2 * a3.annotations.link.outlineWidth, l2.stroke = a3.annotations.link.outlineColor, l2.opacity = a3.annotations.link.outlineOpacity), (0, import_jsx_runtime.jsx)(animated.path, { fill: "none", d: s, style: l2 });
};
var I = function(t3) {
  var n3 = t3.x, i3 = t3.y, o4 = t3.size, e3 = z(), a3 = Dr(), r2 = a3.animate, s = a3.config, l2 = useSpring({ x: n3, y: i3, radius: o4 / 2, config: s, immediate: !r2 });
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [e3.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime.jsx)(animated.circle, { cx: l2.x, cy: l2.y, r: l2.radius, style: g({}, e3.annotations.outline, { fill: "none", strokeWidth: e3.annotations.outline.strokeWidth + 2 * e3.annotations.outline.outlineWidth, stroke: e3.annotations.outline.outlineColor, opacity: e3.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime.jsx)(animated.circle, { cx: l2.x, cy: l2.y, r: l2.radius, style: e3.annotations.outline })] });
};
var D = function(t3) {
  var n3 = t3.x, i3 = t3.y, o4 = t3.size, e3 = void 0 === o4 ? k.dotSize : o4, a3 = z(), r2 = Dr(), s = r2.animate, l2 = r2.config, u2 = useSpring({ x: n3, y: i3, radius: e3 / 2, config: l2, immediate: !s });
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [a3.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime.jsx)(animated.circle, { cx: u2.x, cy: u2.y, r: u2.radius, style: g({}, a3.annotations.outline, { fill: "none", strokeWidth: 2 * a3.annotations.outline.outlineWidth, stroke: a3.annotations.outline.outlineColor, opacity: a3.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime.jsx)(animated.circle, { cx: u2.x, cy: u2.y, r: u2.radius, style: a3.annotations.symbol })] });
};
var L2 = function(t3) {
  var n3 = t3.x, i3 = t3.y, o4 = t3.width, e3 = t3.height, a3 = t3.borderRadius, r2 = void 0 === a3 ? 6 : a3, s = z(), l2 = Dr(), u2 = l2.animate, d2 = l2.config, k2 = useSpring({ x: n3 - o4 / 2, y: i3 - e3 / 2, width: o4, height: e3, config: d2, immediate: !u2 });
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [s.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime.jsx)(animated.rect, { x: k2.x, y: k2.y, rx: r2, ry: r2, width: k2.width, height: k2.height, style: g({}, s.annotations.outline, { fill: "none", strokeWidth: s.annotations.outline.strokeWidth + 2 * s.annotations.outline.outlineWidth, stroke: s.annotations.outline.outlineColor, opacity: s.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime.jsx)(animated.rect, { x: k2.x, y: k2.y, rx: r2, ry: r2, width: k2.width, height: k2.height, style: s.annotations.outline })] });
};
var R = function(t3) {
  var n3 = t3.datum, i3 = t3.x, o4 = t3.y, e3 = t3.note, a3 = M(t3);
  if (!W2(e3)) throw new Error("note should be a valid react element");
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)(E2, { points: a3.points, isOutline: true }), b(t3) && (0, import_jsx_runtime.jsx)(I, { x: i3, y: o4, size: t3.size }), w(t3) && (0, import_jsx_runtime.jsx)(D, { x: i3, y: o4, size: t3.size }), z3(t3) && (0, import_jsx_runtime.jsx)(L2, { x: i3, y: o4, width: t3.width, height: t3.height, borderRadius: t3.borderRadius }), (0, import_jsx_runtime.jsx)(E2, { points: a3.points }), (0, import_jsx_runtime.jsx)(T2, { datum: n3, x: a3.text[0], y: a3.text[1], note: e3 })] });
};
var q2 = function(t3, n3) {
  n3.forEach(function(n4, i3) {
    var o4 = n4[0], e3 = n4[1];
    0 === i3 ? t3.moveTo(o4, e3) : t3.lineTo(o4, e3);
  });
};
var J = function(t3, n3) {
  var i3 = n3.annotations, o4 = n3.theme;
  0 !== i3.length && (t3.save(), i3.forEach(function(n4) {
    if (!v(n4.note)) throw new Error("note is invalid for canvas implementation");
    o4.annotations.link.outlineWidth > 0 && (t3.lineCap = "square", t3.strokeStyle = o4.annotations.link.outlineColor, t3.lineWidth = o4.annotations.link.strokeWidth + 2 * o4.annotations.link.outlineWidth, t3.beginPath(), q2(t3, n4.computed.points), t3.stroke(), t3.lineCap = "butt"), b(n4) && o4.annotations.outline.outlineWidth > 0 && (t3.strokeStyle = o4.annotations.outline.outlineColor, t3.lineWidth = o4.annotations.outline.strokeWidth + 2 * o4.annotations.outline.outlineWidth, t3.beginPath(), t3.arc(n4.x, n4.y, n4.size / 2, 0, 2 * Math.PI), t3.stroke()), w(n4) && o4.annotations.symbol.outlineWidth > 0 && (t3.strokeStyle = o4.annotations.symbol.outlineColor, t3.lineWidth = 2 * o4.annotations.symbol.outlineWidth, t3.beginPath(), t3.arc(n4.x, n4.y, n4.size / 2, 0, 2 * Math.PI), t3.stroke()), z3(n4) && o4.annotations.outline.outlineWidth > 0 && (t3.strokeStyle = o4.annotations.outline.outlineColor, t3.lineWidth = o4.annotations.outline.strokeWidth + 2 * o4.annotations.outline.outlineWidth, t3.beginPath(), t3.rect(n4.x - n4.width / 2, n4.y - n4.height / 2, n4.width, n4.height), t3.stroke()), t3.strokeStyle = o4.annotations.link.stroke, t3.lineWidth = o4.annotations.link.strokeWidth, t3.beginPath(), q2(t3, n4.computed.points), t3.stroke(), b(n4) && (t3.strokeStyle = o4.annotations.outline.stroke, t3.lineWidth = o4.annotations.outline.strokeWidth, t3.beginPath(), t3.arc(n4.x, n4.y, n4.size / 2, 0, 2 * Math.PI), t3.stroke()), w(n4) && (t3.fillStyle = o4.annotations.symbol.fill, t3.beginPath(), t3.arc(n4.x, n4.y, n4.size / 2, 0, 2 * Math.PI), t3.fill()), z3(n4) && (t3.strokeStyle = o4.annotations.outline.stroke, t3.lineWidth = o4.annotations.outline.strokeWidth, t3.beginPath(), t3.rect(n4.x - n4.width / 2, n4.y - n4.height / 2, n4.width, n4.height), t3.stroke()), "function" == typeof n4.note ? n4.note(t3, { datum: n4.datum, x: n4.computed.text[0], y: n4.computed.text[1], theme: o4 }) : (t3.font = o4.annotations.text.fontSize + "px " + o4.annotations.text.fontFamily, t3.textAlign = "left", t3.textBaseline = "alphabetic", t3.fillStyle = o4.annotations.text.fill, t3.strokeStyle = o4.annotations.text.outlineColor, t3.lineWidth = 2 * o4.annotations.text.outlineWidth, o4.annotations.text.outlineWidth > 0 && (t3.lineJoin = "round", t3.strokeText(n4.note, n4.computed.text[0], n4.computed.text[1]), t3.lineJoin = "miter"), t3.fillText(n4.note, n4.computed.text[0], n4.computed.text[1]));
  }), t3.restore());
};

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_uniqBy = __toESM(require_uniqBy(), 1);

// node_modules/@nivo/canvas/dist/nivo-canvas.mjs
var o2 = function(o4, e3, r2, a3, i3, u2) {
  u2 > 0 ? (o4.moveTo(e3 + u2, r2), o4.lineTo(e3 + a3 - u2, r2), o4.quadraticCurveTo(e3 + a3, r2, e3 + a3, r2 + u2), o4.lineTo(e3 + a3, r2 + i3 - u2), o4.quadraticCurveTo(e3 + a3, r2 + i3, e3 + a3 - u2, r2 + i3), o4.lineTo(e3 + u2, r2 + i3), o4.quadraticCurveTo(e3, r2 + i3, e3, r2 + i3 - u2), o4.lineTo(e3, r2 + u2), o4.quadraticCurveTo(e3, r2, e3 + u2, r2), o4.closePath()) : o4.rect(e3, r2, a3, i3);
};

// node_modules/@nivo/bar/dist/nivo-bar.mjs
function U() {
  return U = Object.assign ? Object.assign.bind() : function(e3) {
    for (var t3 = 1; t3 < arguments.length; t3++) {
      var a3 = arguments[t3];
      for (var i3 in a3) ({}).hasOwnProperty.call(a3, i3) && (e3[i3] = a3[i3]);
    }
    return e3;
  }, U.apply(null, arguments);
}
function Z(e3, t3) {
  if (null == e3) return {};
  var a3 = {};
  for (var i3 in e3) if ({}.hasOwnProperty.call(e3, i3)) {
    if (-1 !== t3.indexOf(i3)) continue;
    a3[i3] = e3[i3];
  }
  return a3;
}
var $;
var ee = function(e3) {
  var t3 = e3.bars, a3 = e3.annotations, i3 = O({ data: t3, annotations: a3, getPosition: function(e4) {
    return { x: e4.x + e4.width / 2, y: e4.y + e4.height / 2 };
  }, getDimensions: function(e4) {
    var t4 = e4.height, a4 = e4.width;
    return { width: a4, height: t4, size: Math.max(a4, t4) };
  } });
  return (0, import_jsx_runtime2.jsx)(import_jsx_runtime2.Fragment, { children: i3.map(function(e4, t4) {
    return (0, import_jsx_runtime2.jsx)(R, U({}, e4), t4);
  }) });
};
var te = function(e3) {
  var t3 = e3.width, a3 = e3.height, i3 = e3.legends, n3 = e3.toggleSerie;
  return (0, import_jsx_runtime2.jsx)(import_jsx_runtime2.Fragment, { children: i3.map(function(e4, i4) {
    var l2, r2 = e4[0], o4 = e4[1];
    return (0, import_jsx_runtime2.jsx)(E, U({}, r2, { containerWidth: t3, containerHeight: a3, data: null != (l2 = r2.data) ? l2 : o4, toggleSerie: r2.toggleSerie && "keys" === r2.dataFrom ? n3 : void 0 }), i4);
  }) });
};
var ae = ["data"];
var ie = function(i3) {
  var n3, l2 = i3.bar, r2 = l2.data, o4 = Z(l2, ae), d2 = i3.style, u2 = d2.borderColor, s = d2.color, c = d2.height, h = d2.labelColor, f2 = d2.labelOpacity, b2 = d2.labelX, v2 = d2.labelY, g2 = d2.transform, m2 = d2.width, p2 = d2.textAnchor, x2 = i3.borderRadius, y = i3.borderWidth, S2 = i3.label, k2 = i3.shouldRenderLabel, w2 = i3.isInteractive, L3 = i3.onClick, C2 = i3.onMouseEnter, M2 = i3.onMouseLeave, B = i3.tooltip, R2 = i3.isFocusable, O2 = i3.ariaLabel, I2 = i3.ariaLabelledBy, H2 = i3.ariaDescribedBy, E3 = i3.ariaDisabled, F = i3.ariaHidden, z4 = z(), D2 = z2(), Y2 = D2.showTooltipFromEvent, N = D2.showTooltipAt, j3 = D2.hideTooltip, K = (0, import_react2.useMemo)(function() {
    return function() {
      return (0, import_react2.createElement)(B, U({}, o4, r2));
    };
  }, [B, o4, r2]), _ = (0, import_react2.useCallback)(function(e3) {
    null == L3 || L3(U({ color: o4.color }, r2), e3);
  }, [o4, r2, L3]), q3 = (0, import_react2.useCallback)(function(e3) {
    return Y2(K(), e3);
  }, [Y2, K]), J3 = (0, import_react2.useCallback)(function(e3) {
    null == C2 || C2(r2, e3), Y2(K(), e3);
  }, [r2, C2, Y2, K]), Q = (0, import_react2.useCallback)(function(e3) {
    null == M2 || M2(r2, e3), j3();
  }, [r2, j3, M2]), $2 = (0, import_react2.useCallback)(function() {
    N(K(), [o4.absX + o4.width / 2, o4.absY]);
  }, [N, K, o4]), ee2 = (0, import_react2.useCallback)(function() {
    j3();
  }, [j3]);
  return (0, import_jsx_runtime2.jsxs)(animated.g, { transform: g2, children: [(0, import_jsx_runtime2.jsx)(animated.rect, { width: to(m2, function(e3) {
    return Math.max(e3, 0);
  }), height: to(c, function(e3) {
    return Math.max(e3, 0);
  }), rx: x2, ry: x2, fill: null != (n3 = r2.fill) ? n3 : s, strokeWidth: y, stroke: u2, focusable: R2, tabIndex: R2 ? 0 : void 0, "aria-label": O2 ? O2(r2) : void 0, "aria-labelledby": I2 ? I2(r2) : void 0, "aria-describedby": H2 ? H2(r2) : void 0, "aria-disabled": E3 ? E3(r2) : void 0, "aria-hidden": F ? F(r2) : void 0, onMouseEnter: w2 ? J3 : void 0, onMouseMove: w2 ? q3 : void 0, onMouseLeave: w2 ? Q : void 0, onClick: w2 ? _ : void 0, onFocus: w2 && R2 ? $2 : void 0, onBlur: w2 && R2 ? ee2 : void 0, "data-testid": "bar.item." + r2.id + "." + r2.index }), k2 && (0, import_jsx_runtime2.jsx)(d, { x: b2, y: v2, textAnchor: p2, dominantBaseline: "central", fillOpacity: f2, style: U({}, z4.labels.text, { pointerEvents: "none", fill: h }), children: S2 })] });
};
var ne = ["color", "label"];
var le = function(e3) {
  var t3 = e3.color, a3 = e3.label, i3 = Z(e3, ne);
  return (0, import_jsx_runtime2.jsx)(T, { id: a3, value: i3.formattedValue, enableChip: true, color: t3 });
};
var re = { indexBy: "id", keys: ["value"], groupMode: "stacked", layout: "vertical", reverse: false, minValue: "auto", maxValue: "auto", valueScale: { type: "linear" }, indexScale: { type: "band", round: true }, padding: 0.1, innerPadding: 0, axisTop: null, axisRight: null, axisBottom: Y, axisLeft: Y, enableGridX: false, enableGridY: true, enableLabel: true, label: "formattedValue", labelPosition: "middle", labelOffset: 0, labelSkipWidth: 0, labelSkipHeight: 0, labelTextColor: { theme: "labels.text.fill" }, colorBy: "id", colors: { scheme: "nivo" }, borderRadius: 0, borderWidth: 0, borderColor: { from: "color" }, isInteractive: true, tooltip: le, tooltipLabel: function(e3) {
  return e3.id + " - " + e3.indexValue;
}, legends: [], initialHiddenIds: [], annotations: [], markers: [], enableTotals: false, totalsOffset: 10 };
var oe = U({}, re, { layers: ["grid", "axes", "bars", "totals", "markers", "legends", "annotations"], barComponent: ie, defs: [], fill: [], animate: true, motionConfig: "default", role: "img", isFocusable: false });
var de = U({}, re, { layers: ["grid", "axes", "bars", "totals", "legends", "annotations"], pixelRatio: "undefined" != typeof window && null != ($ = window.devicePixelRatio) ? $ : 1 });
var ue = function(e3, t3, a3, i3, n3, l2) {
  return sn(i3, { all: e3.map(t3), min: 0, max: 0 }, n3, l2).padding(a3);
};
var se = function(e3, t3) {
  return e3.map(function(e4) {
    return U({}, t3.reduce(function(e5, t4) {
      return e5[t4] = null, e5;
    }, {}), e4);
  });
};
var ce = function(e3) {
  return Object.keys(e3).reduce(function(t3, a3) {
    return e3[a3] && (t3[a3] = e3[a3]), t3;
  }, {});
};
var he = function(e3) {
  return [e3, Number(e3)];
};
function fe(e3, t3, a3, i3) {
  return void 0 === e3 && (e3 = re.layout), void 0 === t3 && (t3 = re.reverse), void 0 === a3 && (a3 = re.labelPosition), void 0 === i3 && (i3 = re.labelOffset), function(n3, l2) {
    var r2 = i3 * (t3 ? -1 : 1);
    if ("horizontal" === e3) {
      var o4 = n3 / 2;
      return "start" === a3 ? o4 = t3 ? n3 : 0 : "end" === a3 && (o4 = t3 ? 0 : n3), { labelX: o4 + r2, labelY: l2 / 2, textAnchor: "middle" === a3 ? "middle" : t3 ? "end" : "start" };
    }
    var d2 = l2 / 2;
    return "start" === a3 ? d2 = t3 ? 0 : l2 : "end" === a3 && (d2 = t3 ? l2 : 0), { labelX: n3 / 2, labelY: d2 - r2, textAnchor: "middle" };
  };
}
var be = ["layout", "minValue", "maxValue", "reverse", "width", "height", "padding", "innerPadding", "valueScale", "indexScale", "hiddenIds"];
var ve = function(e3, t3) {
  return e3 > t3;
};
var ge = function(e3, t3) {
  return e3 < t3;
};
var me = function(e3, t3) {
  return Array.from(" ".repeat(t3 - e3), function(t4, a3) {
    return e3 + a3;
  });
};
var pe = function(e3) {
  return ve(e3, 0) ? 0 : e3;
};
var xe = function(e3, t3, a3, i3) {
  var n3 = e3.data, l2 = e3.formatValue, r2 = e3.getColor, o4 = e3.getIndex, d2 = e3.getTooltipLabel, u2 = e3.innerPadding, s = void 0 === u2 ? 0 : u2, c = e3.keys, h = e3.xScale, f2 = e3.yScale, b2 = e3.margin, v2 = a3 ? ge : ve, g2 = n3.map(ce), m2 = [];
  return c.forEach(function(e4, a4) {
    return me(0, h.domain().length).forEach(function(u3) {
      var c2, p2, x2, y = he(n3[u3][e4]), S2 = y[0], k2 = y[1], w2 = o4(n3[u3]), L3 = (null != (c2 = h(w2)) ? c2 : 0) + t3 * a4 + s * a4, C2 = v2(p2 = k2, 0) ? null != (x2 = f2(p2)) ? x2 : 0 : i3, V2 = function(e5, t4) {
        var a5;
        return v2(e5, 0) ? i3 - t4 : (null != (a5 = f2(e5)) ? a5 : 0) - i3;
      }(k2, C2), W3 = { id: e4, value: null === S2 ? S2 : k2, formattedValue: l2(k2), hidden: false, index: u3, indexValue: w2, data: g2[u3] };
      m2.push({ key: e4 + "." + W3.indexValue, index: m2.length, data: W3, x: L3, y: C2, absX: b2.left + L3, absY: b2.top + C2, width: t3, height: V2, color: r2(W3), label: d2(W3) });
    });
  }), m2;
};
var ye = function(e3, t3, a3, i3) {
  var n3 = e3.data, l2 = e3.formatValue, r2 = e3.getIndex, o4 = e3.getColor, d2 = e3.getTooltipLabel, u2 = e3.keys, s = e3.innerPadding, c = void 0 === s ? 0 : s, h = e3.xScale, f2 = e3.yScale, b2 = e3.margin, v2 = a3 ? ge : ve, g2 = n3.map(ce), m2 = [];
  return u2.forEach(function(e4, a4) {
    return me(0, f2.domain().length).forEach(function(u3) {
      var s2, p2, x2, y = he(n3[u3][e4]), S2 = y[0], k2 = y[1], w2 = r2(n3[u3]), L3 = v2(p2 = k2, 0) ? i3 : null != (x2 = h(p2)) ? x2 : 0, C2 = (null != (s2 = f2(w2)) ? s2 : 0) + t3 * a4 + c * a4, V2 = function(e5, t4) {
        var a5;
        return v2(e5, 0) ? (null != (a5 = h(e5)) ? a5 : 0) - i3 : i3 - t4;
      }(k2, L3), W3 = { id: e4, value: null === S2 ? S2 : k2, formattedValue: l2(k2), hidden: false, index: u3, indexValue: w2, data: g2[u3] };
      m2.push({ key: e4 + "." + W3.indexValue, index: m2.length, data: W3, x: L3, y: C2, absX: b2.left + L3, absY: b2.top + C2, width: V2, height: t3, color: o4(W3), label: d2(W3) });
    });
  }), m2;
};
var Se = function(e3) {
  var t3, a3, i3 = e3.layout, n3 = e3.minValue, l2 = e3.maxValue, r2 = e3.reverse, o4 = e3.width, d2 = e3.height, u2 = e3.padding, s = void 0 === u2 ? 0 : u2, c = e3.innerPadding, h = void 0 === c ? 0 : c, f2 = e3.valueScale, b2 = e3.indexScale, v2 = e3.hiddenIds, g2 = void 0 === v2 ? [] : v2, m2 = Z(e3, be), p2 = m2.keys.filter(function(e4) {
    return !g2.includes(e4);
  }), x2 = se(m2.data, p2), y = "vertical" === i3 ? ["y", "x", o4] : ["x", "y", d2], S2 = y[0], k2 = y[1], w2 = y[2], L3 = ue(x2, m2.getIndex, s, b2, w2, k2), C2 = U({ max: l2, min: n3, reverse: r2 }, f2), V2 = "auto" === C2.min ? pe : function(e4) {
    return e4;
  }, W3 = x2.reduce(function(e4, t4) {
    return [].concat(e4, p2.map(function(e5) {
      return t4[e5];
    }));
  }, []).filter(Boolean), M2 = V2(Math.min.apply(Math, W3)), B = (a3 = Math.max.apply(Math, W3), isFinite(a3) ? a3 : 0), R2 = sn(C2, { all: W3, min: M2, max: B }, "x" === S2 ? o4 : d2, S2), O2 = "vertical" === i3 ? [L3, R2] : [R2, L3], I2 = O2[0], T4 = O2[1], H2 = (L3.bandwidth() - h * (p2.length - 1)) / p2.length, P3 = [U({}, m2, { data: x2, keys: p2, innerPadding: h, xScale: I2, yScale: T4 }), H2, C2.reverse, null != (t3 = R2(0)) ? t3 : 0];
  return { xScale: I2, yScale: T4, bars: H2 > 0 ? "vertical" === i3 ? xe.apply(void 0, P3) : ye.apply(void 0, P3) : [] };
};
var ke = ["data", "layout", "minValue", "maxValue", "reverse", "width", "height", "padding", "valueScale", "indexScale", "hiddenIds"];
var we = function(e3) {
  var t3;
  return e3.some(Array.isArray) ? we((t3 = []).concat.apply(t3, e3)) : e3;
};
var Le = function(e3, t3, a3) {
  var i3 = e3.formatValue, n3 = e3.getColor, l2 = e3.getIndex, r2 = e3.getTooltipLabel, o4 = e3.innerPadding, d2 = e3.stackedData, u2 = e3.xScale, s = e3.yScale, c = e3.margin, h = [];
  return d2.forEach(function(e4) {
    return u2.domain().forEach(function(d3, f2) {
      var b2, v2, g2 = e4[f2], m2 = null != (b2 = u2(l2(g2.data))) ? b2 : 0, p2 = (null != (v2 = function(e5) {
        return s(e5[a3 ? 0 : 1]);
      }(g2)) ? v2 : 0) + 0.5 * o4, x2 = function(e5, t4) {
        var i4;
        return (null != (i4 = s(e5[a3 ? 1 : 0])) ? i4 : 0) - t4;
      }(g2, p2) - o4, y = he(g2.data[e4.key]), S2 = y[0], k2 = y[1], w2 = { id: e4.key, value: null === S2 ? S2 : k2, formattedValue: i3(k2), hidden: false, index: f2, indexValue: d3, data: ce(g2.data) };
      h.push({ key: e4.key + "." + d3, index: h.length, data: w2, x: m2, y: p2, absX: c.left + m2, absY: c.top + p2, width: t3, height: x2, color: n3(w2), label: r2(w2) });
    });
  }), h;
};
var Ce = function(e3, t3, a3) {
  var i3 = e3.formatValue, n3 = e3.getColor, l2 = e3.getIndex, r2 = e3.getTooltipLabel, o4 = e3.innerPadding, d2 = e3.stackedData, u2 = e3.xScale, s = e3.yScale, c = e3.margin, h = [];
  return d2.forEach(function(e4) {
    return s.domain().forEach(function(d3, f2) {
      var b2, v2, g2 = e4[f2], m2 = null != (b2 = s(l2(g2.data))) ? b2 : 0, p2 = (null != (v2 = function(e5) {
        return u2(e5[a3 ? 1 : 0]);
      }(g2)) ? v2 : 0) + 0.5 * o4, x2 = function(e5, t4) {
        var i4;
        return (null != (i4 = u2(e5[a3 ? 0 : 1])) ? i4 : 0) - t4;
      }(g2, p2) - o4, y = he(g2.data[e4.key]), S2 = y[0], k2 = y[1], w2 = { id: e4.key, value: null === S2 ? S2 : k2, formattedValue: i3(k2), hidden: false, index: f2, indexValue: d3, data: ce(g2.data) };
      h.push({ key: e4.key + "." + d3, index: h.length, data: w2, x: p2, y: m2, absX: c.left + p2, absY: c.top + m2, width: x2, height: t3, color: n3(w2), label: r2(w2) });
    });
  }), h;
};
var Ve = function(e3) {
  var t3, a3 = e3.data, i3 = e3.layout, n3 = e3.minValue, l2 = e3.maxValue, r2 = e3.reverse, o4 = e3.width, d2 = e3.height, u2 = e3.padding, s = void 0 === u2 ? 0 : u2, c = e3.valueScale, h = e3.indexScale, f2 = e3.hiddenIds, b2 = void 0 === f2 ? [] : f2, v2 = Z(e3, ke), g2 = v2.keys.filter(function(e4) {
    return !b2.includes(e4);
  }), m2 = stack_default().keys(g2).offset(diverging_default)(se(a3, g2)), p2 = "vertical" === i3 ? ["y", "x", o4] : ["x", "y", d2], x2 = p2[0], y = p2[1], S2 = p2[2], k2 = ue(a3, v2.getIndex, s, h, S2, y), w2 = U({ max: l2, min: n3, reverse: r2 }, c), L3 = (t3 = we(m2), "log" === c.type ? t3.filter(function(e4) {
    return 0 !== e4;
  }) : t3), C2 = Math.min.apply(Math, L3), V2 = Math.max.apply(Math, L3), W3 = sn(w2, { all: L3, min: C2, max: V2 }, "x" === x2 ? o4 : d2, x2), M2 = "vertical" === i3 ? [k2, W3] : [W3, k2], B = M2[0], R2 = M2[1], O2 = v2.innerPadding > 0 ? v2.innerPadding : 0, I2 = k2.bandwidth(), T4 = [U({}, v2, { innerPadding: O2, stackedData: m2, xScale: B, yScale: R2 }), I2, w2.reverse];
  return { xScale: B, yScale: R2, bars: I2 > 0 ? "vertical" === i3 ? Le.apply(void 0, T4) : Ce.apply(void 0, T4) : [] };
};
var We = function(e3) {
  var t3 = e3.bars, a3 = e3.direction, i3 = e3.from, n3 = e3.groupMode, l2 = e3.layout, r2 = e3.legendLabel, o4 = e3.reverse, d2 = gn(null != r2 ? r2 : "indexes" === i3 ? "indexValue" : "id");
  return "indexes" === i3 ? function(e4, t4, a4) {
    var i4 = (0, import_uniqBy.default)(e4.map(function(e5) {
      var t5, i5;
      return { id: null != (t5 = e5.data.indexValue) ? t5 : "", label: a4(e5.data), hidden: e5.data.hidden, color: null != (i5 = e5.color) ? i5 : "#000" };
    }), function(e5) {
      return e5.id;
    });
    return "horizontal" === t4 && i4.reverse(), i4;
  }(t3, l2, d2) : function(e4, t4, a4, i4, n4, l3) {
    var r3 = (0, import_uniqBy.default)(e4.map(function(e5) {
      var t5;
      return { id: e5.data.id, label: l3(e5.data), hidden: e5.data.hidden, color: null != (t5 = e5.color) ? t5 : "#000" };
    }), function(e5) {
      return e5.id;
    });
    return ("vertical" === t4 && "stacked" === i4 && "column" === a4 && true !== n4 || "horizontal" === t4 && "stacked" === i4 && true === n4) && r3.reverse(), r3;
  }(t3, l2, a3, n3, o4, d2);
};
var Me = function(e3, t3, a3) {
  var i3 = e3.get(t3) || 0;
  e3.set(t3, i3 + a3);
};
var Be = function(e3, t3, a3) {
  var i3 = e3.get(t3) || 0;
  e3.set(t3, i3 + (a3 > 0 ? a3 : 0));
};
var Re = function(e3, t3, a3) {
  var i3 = e3.get(t3) || 0;
  e3.set(t3, Math.max(i3, Number(a3)));
};
var Oe = function(e3, t3) {
  var a3 = e3.get(t3) || 0;
  e3.set(t3, a3 + 1);
};
var Ie = function(t3) {
  var n3 = t3.indexBy, l2 = void 0 === n3 ? re.indexBy : n3, r2 = t3.keys, o4 = void 0 === r2 ? re.keys : r2, d2 = t3.label, u2 = void 0 === d2 ? re.label : d2, s = t3.tooltipLabel, c = void 0 === s ? re.tooltipLabel : s, h = t3.valueFormat, f2 = t3.colors, g2 = void 0 === f2 ? re.colors : f2, m2 = t3.colorBy, p2 = void 0 === m2 ? re.colorBy : m2, x2 = t3.borderColor, y = void 0 === x2 ? re.borderColor : x2, S2 = t3.labelTextColor, k2 = void 0 === S2 ? re.labelTextColor : S2, w2 = t3.groupMode, L3 = void 0 === w2 ? re.groupMode : w2, C2 = t3.layout, V2 = void 0 === C2 ? re.layout : C2, W3 = t3.reverse, M2 = void 0 === W3 ? re.reverse : W3, B = t3.data, R2 = t3.minValue, O2 = void 0 === R2 ? re.minValue : R2, I2 = t3.maxValue, T4 = void 0 === I2 ? re.maxValue : I2, H2 = t3.margin, P3 = t3.width, E3 = t3.height, F = t3.padding, X = void 0 === F ? re.padding : F, Y2 = t3.innerPadding, G = void 0 === Y2 ? re.innerPadding : Y2, N = t3.valueScale, j3 = void 0 === N ? re.valueScale : N, K = t3.indexScale, _ = void 0 === K ? re.indexScale : K, q3 = t3.initialHiddenIds, J3 = void 0 === q3 ? re.initialHiddenIds : q3, Q = t3.enableLabel, Z2 = void 0 === Q ? re.enableLabel : Q, $2 = t3.labelSkipWidth, ee2 = void 0 === $2 ? re.labelSkipWidth : $2, te2 = t3.labelSkipHeight, ae2 = void 0 === te2 ? re.labelSkipHeight : te2, ie2 = t3.legends, ne2 = void 0 === ie2 ? re.legends : ie2, le2 = t3.legendLabel, oe2 = t3.totalsOffset, de2 = void 0 === oe2 ? re.totalsOffset : oe2, ue2 = (0, import_react2.useState)(null != J3 ? J3 : []), se2 = ue2[0], ce2 = ue2[1], he2 = (0, import_react2.useCallback)(function(e3) {
    ce2(function(t4) {
      return t4.indexOf(e3) > -1 ? t4.filter(function(t5) {
        return t5 !== e3;
      }) : [].concat(t4, [e3]);
    });
  }, []), fe2 = bn(l2), be2 = bn(u2), ve2 = bn(c), ge2 = hn(h), me2 = z(), pe2 = pr(g2, p2), xe2 = Ye(y, me2), ye2 = Ye(k2, me2), ke2 = ("grouped" === L3 ? Se : Ve)({ layout: V2, reverse: M2, data: B, getIndex: fe2, keys: o4, minValue: O2, maxValue: T4, width: P3, height: E3, getColor: pe2, padding: X, innerPadding: G, valueScale: j3, indexScale: _, hiddenIds: se2, formatValue: ge2, getTooltipLabel: ve2, margin: H2 }), we2 = ke2.bars, Le2 = ke2.xScale, Ce2 = ke2.yScale, Ie2 = (0, import_react2.useMemo)(function() {
    return we2.filter(function(e3) {
      return null !== e3.data.value;
    }).map(function(e3, t4) {
      return U({}, e3, { index: t4 });
    });
  }, [we2]), Te2 = (0, import_react2.useCallback)(function(e3) {
    var t4 = e3.width, a3 = e3.height;
    return !!Z2 && (!(ee2 > 0 && t4 < ee2) && !(ae2 > 0 && a3 < ae2));
  }, [Z2, ee2, ae2]), He2 = (0, import_react2.useMemo)(function() {
    return o4.map(function(e3) {
      var t4 = we2.find(function(t5) {
        return t5.data.id === e3;
      });
      return U({}, t4, { data: U({ id: e3 }, null == t4 ? void 0 : t4.data, { hidden: se2.includes(e3) }) });
    });
  }, [se2, o4, we2]), Pe2 = (0, import_react2.useMemo)(function() {
    return ne2.map(function(e3) {
      return [e3, We({ bars: "keys" === e3.dataFrom ? He2 : we2, direction: e3.direction, from: e3.dataFrom, groupMode: L3, layout: V2, legendLabel: le2, reverse: M2 })];
    });
  }, [ne2, He2, we2, L3, V2, le2, M2]), Ee2 = (0, import_react2.useMemo)(function() {
    return function(e3, t4, a3, i3, n4, l3, r3) {
      void 0 === i3 && (i3 = re.layout), void 0 === n4 && (n4 = re.groupMode);
      var o5 = [];
      if (0 === e3.length) return o5;
      var d3 = /* @__PURE__ */ new Map(), u3 = e3[0].width, s2 = e3[0].height;
      if ("stacked" === n4) {
        var c2 = /* @__PURE__ */ new Map();
        e3.forEach(function(e4) {
          var t5 = e4.data, a4 = t5.indexValue, i4 = t5.value;
          Me(d3, a4, Number(i4)), Be(c2, a4, Number(i4));
        }), c2.forEach(function(e4, n5) {
          var c3, h3, f4, b2 = d3.get(n5) || 0;
          "vertical" === i3 ? (c3 = t4(n5), h3 = a3(e4), f4 = a3(e4 / 2)) : (c3 = t4(e4), h3 = a3(n5), f4 = t4(e4 / 2)), c3 += "vertical" === i3 ? u3 / 2 : l3, h3 += "vertical" === i3 ? -l3 : s2 / 2, o5.push({ key: "total_" + n5, x: c3, y: h3, value: b2, formattedValue: r3(b2), animationOffset: f4 });
        });
      } else if ("grouped" === n4) {
        var h2 = /* @__PURE__ */ new Map(), f3 = /* @__PURE__ */ new Map();
        e3.forEach(function(e4) {
          var t5 = e4.data, a4 = t5.indexValue, i4 = t5.value;
          Me(d3, a4, Number(i4)), Re(h2, a4, Number(i4)), Oe(f3, a4);
        }), h2.forEach(function(e4, n5) {
          var c3, h3, b2, v2 = d3.get(n5) || 0, g3 = f3.get(n5);
          "vertical" === i3 ? (c3 = t4(n5), h3 = a3(e4), b2 = a3(e4 / 2)) : (c3 = t4(e4), h3 = a3(n5), b2 = t4(e4 / 2)), c3 += "vertical" === i3 ? g3 * u3 / 2 : l3, h3 += "vertical" === i3 ? -l3 : g3 * s2 / 2, o5.push({ key: "total_" + n5, x: c3, y: h3, value: v2, formattedValue: r3(v2), animationOffset: b2 });
        });
      }
      return o5;
    }(we2, Le2, Ce2, V2, L3, de2, ge2);
  }, [we2, Le2, Ce2, V2, L3, de2, ge2]);
  return { bars: we2, barsWithValue: Ie2, xScale: Le2, yScale: Ce2, getIndex: fe2, getLabel: be2, getTooltipLabel: ve2, formatValue: ge2, getColor: pe2, getBorderColor: xe2, getLabelColor: ye2, shouldRenderBarLabel: Te2, hiddenIds: se2, toggleSerie: he2, legendsWithData: Pe2, barTotals: Ee2 };
};
var Te = function(e3) {
  var t3 = e3.data, a3 = e3.springConfig, i3 = e3.animate, n3 = e3.layout, l2 = void 0 === n3 ? oe.layout : n3, r2 = z();
  return useTransition(t3, { keys: function(e4) {
    return e4.key;
  }, from: function(e4) {
    return { x: "vertical" === l2 ? e4.x : e4.animationOffset, y: "vertical" === l2 ? e4.animationOffset : e4.y, labelOpacity: 0 };
  }, enter: function(e4) {
    return { x: e4.x, y: e4.y, labelOpacity: 1 };
  }, update: function(e4) {
    return { x: e4.x, y: e4.y, labelOpacity: 1 };
  }, leave: function(e4) {
    return { x: "vertical" === l2 ? e4.x : e4.animationOffset, y: "vertical" === l2 ? e4.animationOffset : e4.y, labelOpacity: 0 };
  }, config: a3, immediate: !i3, initial: i3 ? void 0 : null })(function(e4, t4) {
    return (0, import_jsx_runtime2.jsx)(animated.text, { x: e4.x, y: e4.y, fillOpacity: e4.labelOpacity, style: U({}, r2.labels.text, { pointerEvents: "none" }), fontWeight: "bold", fontSize: r2.labels.text.fontSize, fontFamily: r2.labels.text.fontFamily, textAnchor: "vertical" === l2 ? "middle" : "start", alignmentBaseline: "vertical" === l2 ? "alphabetic" : "middle", children: t4.formattedValue }, t4.key);
  });
};
var He = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var Pe = function(a3) {
  var i3 = a3.data, n3 = a3.indexBy, r2 = a3.keys, o4 = a3.margin, d2 = a3.width, c = a3.height, h = a3.groupMode, f2 = a3.layout, b2 = a3.reverse, v2 = a3.minValue, g2 = a3.maxValue, k2 = a3.valueScale, w2 = a3.indexScale, L3 = a3.padding, C2 = a3.innerPadding, V2 = a3.axisTop, W3 = a3.axisRight, B = a3.axisBottom, R2 = void 0 === B ? oe.axisBottom : B, O2 = a3.axisLeft, I2 = void 0 === O2 ? oe.axisLeft : O2, H2 = a3.enableGridX, P3 = void 0 === H2 ? oe.enableGridX : H2, E3 = a3.enableGridY, F = void 0 === E3 ? oe.enableGridY : E3, z4 = a3.gridXValues, D2 = a3.gridYValues, A = a3.layers, X = void 0 === A ? oe.layers : A, Y2 = a3.barComponent, G = void 0 === Y2 ? oe.barComponent : Y2, N = a3.enableLabel, j3 = void 0 === N ? oe.enableLabel : N, K = a3.label, _ = a3.labelSkipWidth, q3 = void 0 === _ ? oe.labelSkipWidth : _, J3 = a3.labelSkipHeight, Q = void 0 === J3 ? oe.labelSkipHeight : J3, Z2 = a3.labelTextColor, $2 = a3.labelPosition, ae2 = void 0 === $2 ? oe.labelPosition : $2, ie2 = a3.labelOffset, ne2 = void 0 === ie2 ? oe.labelOffset : ie2, le2 = a3.markers, re2 = void 0 === le2 ? oe.markers : le2, de2 = a3.colorBy, ue2 = a3.colors, se2 = a3.defs, ce2 = void 0 === se2 ? oe.defs : se2, he2 = a3.fill, be2 = void 0 === he2 ? oe.fill : he2, ve2 = a3.borderRadius, ge2 = void 0 === ve2 ? oe.borderRadius : ve2, me2 = a3.borderWidth, pe2 = void 0 === me2 ? oe.borderWidth : me2, xe2 = a3.borderColor, ye2 = a3.annotations, Se2 = void 0 === ye2 ? oe.annotations : ye2, ke2 = a3.legendLabel, we2 = a3.tooltipLabel, Le2 = a3.valueFormat, Ce2 = a3.isInteractive, Ve2 = void 0 === Ce2 ? oe.isInteractive : Ce2, We2 = a3.tooltip, Me2 = void 0 === We2 ? oe.tooltip : We2, Be2 = a3.onClick, Re2 = a3.onMouseEnter, Oe2 = a3.onMouseLeave, He2 = a3.legends, Pe2 = a3.role, Ee2 = void 0 === Pe2 ? oe.role : Pe2, Fe2 = a3.ariaLabel, ze2 = a3.ariaLabelledBy, De2 = a3.ariaDescribedBy, Ae2 = a3.isFocusable, Xe2 = void 0 === Ae2 ? oe.isFocusable : Ae2, Ye3 = a3.barAriaLabel, Ge2 = a3.barAriaLabelledBy, Ne2 = a3.barAriaDescribedBy, je = a3.barAriaHidden, Ke = a3.barAriaDisabled, _e = a3.initialHiddenIds, qe = a3.enableTotals, Je = void 0 === qe ? oe.enableTotals : qe, Qe = a3.totalsOffset, Ue = void 0 === Qe ? oe.totalsOffset : Qe, Ze = a3.forwardedRef, $e = Dr(), et = $e.animate, tt = $e.config, at = cn(d2, c, o4), it = at.outerWidth, nt = at.outerHeight, lt = at.margin, rt = at.innerWidth, ot = at.innerHeight, dt = Ie({ indexBy: n3, label: K, tooltipLabel: we2, valueFormat: Le2, colors: ue2, colorBy: de2, borderColor: xe2, labelTextColor: Z2, groupMode: h, layout: f2, reverse: b2, data: i3, keys: r2, minValue: v2, maxValue: g2, margin: lt, width: rt, height: ot, padding: L3, innerPadding: C2, valueScale: k2, indexScale: w2, enableLabel: j3, labelSkipWidth: q3, labelSkipHeight: Q, legends: He2, legendLabel: ke2, initialHiddenIds: _e, totalsOffset: Ue }), ut2 = dt.bars, st = dt.barsWithValue, ct2 = dt.xScale, ht2 = dt.yScale, ft2 = dt.getLabel, bt = dt.getTooltipLabel, vt = dt.getBorderColor, gt = dt.getLabelColor, mt = dt.shouldRenderBarLabel, pt = dt.toggleSerie, xt = dt.legendsWithData, yt = dt.barTotals, St = dt.getColor, kt = fe(f2, b2, ae2, ne2), wt = useTransition(st, { keys: function(e3) {
    return e3.key;
  }, from: function(e3) {
    return U({ borderColor: vt(e3), color: e3.color, height: 0, labelColor: gt(e3), labelOpacity: 0 }, kt(e3.width, e3.height), { transform: "translate(" + e3.x + ", " + (e3.y + e3.height) + ")", width: e3.width }, "vertical" === f2 ? {} : { height: e3.height, transform: "translate(" + e3.x + ", " + e3.y + ")", width: 0 });
  }, enter: function(e3) {
    return U({ borderColor: vt(e3), color: e3.color, height: e3.height, labelColor: gt(e3), labelOpacity: 1 }, kt(e3.width, e3.height), { transform: "translate(" + e3.x + ", " + e3.y + ")", width: e3.width });
  }, update: function(e3) {
    return U({ borderColor: vt(e3), color: e3.color, height: e3.height, labelColor: gt(e3), labelOpacity: 1 }, kt(e3.width, e3.height), { transform: "translate(" + e3.x + ", " + e3.y + ")", width: e3.width });
  }, leave: function(e3) {
    return U({ borderColor: vt(e3), color: e3.color, height: 0, labelColor: gt(e3), labelOpacity: 0 }, kt(e3.width, e3.height), { labelY: 0, transform: "translate(" + e3.x + ", " + (e3.y + e3.height) + ")", width: e3.width }, "vertical" === f2 ? {} : U({}, kt(e3.width, e3.height), { labelX: 0, height: e3.height, transform: "translate(" + e3.x + ", " + e3.y + ")", width: 0 }));
  }, config: tt, immediate: !et, initial: et ? void 0 : null }), Lt = (0, import_react2.useMemo)(function() {
    return { borderRadius: ge2, borderWidth: pe2, enableLabel: j3, isInteractive: Ve2, labelSkipWidth: q3, labelSkipHeight: Q, onClick: Be2, onMouseEnter: Re2, onMouseLeave: Oe2, getTooltipLabel: bt, tooltip: Me2, isFocusable: Xe2, ariaLabel: Ye3, ariaLabelledBy: Ge2, ariaDescribedBy: Ne2, ariaHidden: je, ariaDisabled: Ke };
  }, [ge2, pe2, j3, bt, Ve2, Q, q3, Be2, Re2, Oe2, Me2, Xe2, Ye3, Ge2, Ne2, je, Ke]), Ct = Mn(ce2, ut2, be2, { dataKey: "data", targetKey: "data.fill" }), Vt = { annotations: null, axes: null, bars: null, grid: null, legends: null, markers: null, totals: null };
  X.includes("annotations") && (Vt.annotations = (0, import_jsx_runtime2.jsx)(ee, { bars: ut2, annotations: Se2 }, "annotations")), X.includes("axes") && (Vt.axes = (0, import_jsx_runtime2.jsx)(V, { xScale: ct2, yScale: ht2, width: rt, height: ot, top: V2, right: W3, bottom: R2, left: I2 }, "axes")), X.includes("bars") && (Vt.bars = (0, import_jsx_runtime2.jsx)(import_react2.Fragment, { children: wt(function(e3, a4) {
    return (0, import_react2.createElement)(G, U({}, Lt, { bar: a4, style: e3, shouldRenderLabel: mt(a4), label: ft2(a4.data) }));
  }) }, "bars")), X.includes("grid") && (Vt.grid = (0, import_jsx_runtime2.jsx)(j, { width: rt, height: ot, xScale: P3 ? ct2 : null, yScale: F ? ht2 : null, xValues: z4, yValues: D2 }, "grid")), X.includes("legends") && (Vt.legends = (0, import_jsx_runtime2.jsx)(te, { width: rt, height: ot, legends: xt, toggleSerie: pt }, "legends")), X.includes("markers") && (Vt.markers = (0, import_jsx_runtime2.jsx)(Pt, { markers: re2, width: rt, height: ot, xScale: ct2, yScale: ht2 }, "markers")), X.includes("totals") && Je && (Vt.totals = (0, import_jsx_runtime2.jsx)(Te, { data: yt, springConfig: tt, animate: et, layout: f2 }, "totals"));
  var Wt = (0, import_react2.useMemo)(function() {
    return U({}, Lt, { margin: lt, width: d2, height: c, innerWidth: rt, innerHeight: ot, bars: ut2, legendData: xt, enableLabel: j3, xScale: ct2, yScale: ht2, tooltip: Me2, getTooltipLabel: bt, onClick: Be2, onMouseEnter: Re2, onMouseLeave: Oe2, getColor: St });
  }, [Lt, lt, d2, c, rt, ot, ut2, xt, j3, ct2, ht2, Me2, bt, Be2, Re2, Oe2, St]);
  return (0, import_jsx_runtime2.jsx)(Rt, { width: it, height: nt, margin: lt, defs: Ct, role: Ee2, ariaLabel: Fe2, ariaLabelledBy: ze2, ariaDescribedBy: De2, isFocusable: Xe2, ref: Ze, children: X.map(function(e3, a4) {
    var i4;
    return "function" == typeof e3 ? (0, import_jsx_runtime2.jsx)(import_react2.Fragment, { children: (0, import_react2.createElement)(e3, Wt) }, a4) : null != (i4 = null == Vt ? void 0 : Vt[e3]) ? i4 : null;
  }) });
};
var Ee = (0, import_react2.forwardRef)(function(e3, t3) {
  var a3 = e3.isInteractive, i3 = void 0 === a3 ? oe.isInteractive : a3, n3 = e3.animate, l2 = void 0 === n3 ? oe.animate : n3, r2 = e3.motionConfig, o4 = void 0 === r2 ? oe.motionConfig : r2, d2 = e3.theme, u2 = e3.renderWrapper, s = Z(e3, He);
  return (0, import_jsx_runtime2.jsx)(Fr, { animate: l2, isInteractive: i3, motionConfig: o4, renderWrapper: u2, theme: d2, children: (0, import_jsx_runtime2.jsx)(Pe, U({ isInteractive: i3 }, s, { forwardedRef: t3 })) });
});
var Fe = ["isInteractive", "renderWrapper", "theme"];
var ze = function(e3, t3, a3, i3) {
  return e3.find(function(e4) {
    return wn(e4.x + t3.left, e4.y + t3.top, e4.width, e4.height, a3, i3);
  });
};
var De = function(i3) {
  var n3 = i3.data, l2 = i3.indexBy, d2 = i3.keys, u2 = i3.margin, s = i3.width, f2 = i3.height, b2 = i3.groupMode, g2 = i3.layout, m2 = i3.reverse, x2 = i3.minValue, y = i3.maxValue, S2 = i3.valueScale, L3 = i3.indexScale, C2 = i3.padding, V2 = i3.innerPadding, W3 = i3.axisTop, M2 = i3.axisRight, R2 = i3.axisBottom, H2 = void 0 === R2 ? de.axisBottom : R2, P3 = i3.axisLeft, E3 = void 0 === P3 ? de.axisLeft : P3, z4 = i3.enableGridX, D2 = void 0 === z4 ? de.enableGridX : z4, Y2 = i3.enableGridY, G = void 0 === Y2 ? de.enableGridY : Y2, K = i3.gridXValues, _ = i3.gridYValues, q3 = i3.labelPosition, J3 = void 0 === q3 ? de.labelPosition : q3, Z2 = i3.labelOffset, $2 = void 0 === Z2 ? de.labelOffset : Z2, ee2 = i3.layers, te2 = void 0 === ee2 ? de.layers : ee2, ae2 = i3.renderBar, ie2 = void 0 === ae2 ? function(e3, t3) {
    var a3 = t3.bar, i4 = a3.color, n4 = a3.height, l3 = a3.width, r2 = a3.x, o4 = a3.y, d3 = t3.borderColor, u3 = t3.borderRadius, s2 = t3.borderWidth, c = t3.label, h = t3.shouldRenderLabel, f3 = t3.labelStyle, b3 = t3.labelX, v2 = t3.labelY, g3 = t3.textAnchor;
    e3.fillStyle = i4, s2 > 0 && (e3.strokeStyle = d3, e3.lineWidth = s2), e3.beginPath(), o2(e3, r2, o4, l3, n4, Math.min(u3, n4)), e3.fill(), s2 > 0 && e3.stroke(), h && (e3.textBaseline = "middle", e3.textAlign = "middle" === g3 ? "center" : g3, u(e3, f3, c, r2 + b3, o4 + v2));
  } : ae2, ne2 = i3.enableLabel, le2 = void 0 === ne2 ? de.enableLabel : ne2, re2 = i3.label, oe2 = i3.labelSkipWidth, ue2 = void 0 === oe2 ? de.labelSkipWidth : oe2, se2 = i3.labelSkipHeight, ce2 = void 0 === se2 ? de.labelSkipHeight : se2, he2 = i3.labelTextColor, be2 = i3.colorBy, ve2 = i3.colors, ge2 = i3.borderRadius, me2 = void 0 === ge2 ? de.borderRadius : ge2, pe2 = i3.borderWidth, xe2 = void 0 === pe2 ? de.borderWidth : pe2, ye2 = i3.borderColor, Se2 = i3.annotations, ke2 = void 0 === Se2 ? de.annotations : Se2, we2 = i3.legendLabel, Le2 = i3.tooltipLabel, Ce2 = i3.valueFormat, Ve2 = i3.isInteractive, We2 = void 0 === Ve2 ? de.isInteractive : Ve2, Me2 = i3.tooltip, Be2 = void 0 === Me2 ? de.tooltip : Me2, Re2 = i3.onClick, Oe2 = i3.onMouseEnter, Te2 = i3.onMouseLeave, He2 = i3.legends, Pe2 = i3.pixelRatio, Ee2 = void 0 === Pe2 ? de.pixelRatio : Pe2, Fe2 = i3.role, De2 = i3.forwardedRef, Ae2 = i3.enableTotals, Xe2 = void 0 === Ae2 ? de.enableTotals : Ae2, Ye3 = i3.totalsOffset, Ge2 = void 0 === Ye3 ? de.totalsOffset : Ye3, Ne2 = (0, import_react2.useRef)(null), je = z(), Ke = cn(s, f2, u2), _e = Ke.margin, qe = Ke.innerWidth, Je = Ke.innerHeight, Qe = Ke.outerWidth, Ue = Ke.outerHeight, Ze = Ie({ indexBy: l2, label: re2, tooltipLabel: Le2, valueFormat: Ce2, colors: ve2, colorBy: be2, borderColor: ye2, labelTextColor: he2, groupMode: b2, layout: g2, reverse: m2, data: n3, keys: d2, minValue: x2, maxValue: y, margin: _e, width: qe, height: Je, padding: C2, innerPadding: V2, valueScale: S2, indexScale: L3, enableLabel: le2, labelSkipWidth: ue2, labelSkipHeight: ce2, legends: He2, legendLabel: we2, totalsOffset: Ge2 }), $e = Ze.bars, et = Ze.barsWithValue, tt = Ze.xScale, at = Ze.yScale, it = Ze.getLabel, nt = Ze.getTooltipLabel, lt = Ze.getBorderColor, rt = Ze.getLabelColor, ot = Ze.shouldRenderBarLabel, dt = Ze.legendsWithData, ut2 = Ze.barTotals, st = Ze.getColor, ct2 = z2(), ht2 = ct2.showTooltipFromEvent, ft2 = ct2.hideTooltip, bt = j2({ annotations: O({ data: $e, annotations: ke2, getPosition: function(e3) {
    return { x: e3.x, y: e3.y };
  }, getDimensions: function(e3) {
    var t3 = e3.width, a3 = e3.height;
    return { width: t3, height: a3, size: Math.max(t3, a3) };
  } }) }), vt = (0, import_react2.useMemo)(function() {
    return { borderRadius: me2, borderWidth: xe2, isInteractive: We2, isFocusable: false, labelSkipWidth: ue2, labelSkipHeight: ce2, margin: _e, width: s, height: f2, innerWidth: qe, innerHeight: Je, bars: $e, legendData: dt, enableLabel: le2, xScale: tt, yScale: at, tooltip: Be2, getTooltipLabel: nt, onClick: Re2, onMouseEnter: Oe2, onMouseLeave: Te2, getColor: st };
  }, [me2, xe2, We2, ue2, ce2, _e, s, f2, qe, Je, $e, dt, le2, tt, at, Be2, nt, Re2, Oe2, Te2, st]), gt = hn(Ce2), mt = fe(g2, m2, J3, $2);
  (0, import_react2.useEffect)(function() {
    var e3, t3 = null == (e3 = Ne2.current) ? void 0 : e3.getContext("2d");
    Ne2.current && t3 && (Ne2.current.width = Qe * Ee2, Ne2.current.height = Ue * Ee2, t3.scale(Ee2, Ee2), t3.fillStyle = je.background, t3.fillRect(0, 0, Qe, Ue), t3.translate(_e.left, _e.top), te2.forEach(function(e4) {
      "grid" === e4 ? "number" == typeof je.grid.line.strokeWidth && je.grid.line.strokeWidth > 0 && (t3.lineWidth = je.grid.line.strokeWidth, t3.strokeStyle = je.grid.line.stroke, D2 && q(t3, { width: qe, height: Je, scale: tt, axis: "x", values: K }), G && q(t3, { width: qe, height: Je, scale: at, axis: "y", values: _ })) : "axes" === e4 ? W(t3, { xScale: tt, yScale: at, width: qe, height: Je, top: W3, right: M2, bottom: H2, left: E3, theme: je }) : "bars" === e4 ? (f(t3, je.text), et.forEach(function(e5) {
        ie2(t3, U({ bar: e5, borderColor: lt(e5), borderRadius: me2, borderWidth: xe2, label: it(e5.data), shouldRenderLabel: ot(e5), labelStyle: U({}, je.labels.text, { fill: rt(e5) }) }, mt(e5.width, e5.height)));
      })) : "legends" === e4 ? dt.forEach(function(e5) {
        var a3 = e5[0], i4 = e5[1];
        L(t3, U({}, a3, { data: i4, containerWidth: qe, containerHeight: Je, theme: je }));
      }) : "annotations" === e4 ? J(t3, { annotations: bt, theme: je }) : "totals" === e4 && Xe2 ? function(e5, t4, a3, i4) {
        void 0 === i4 && (i4 = de.layout), f(e5, a3.labels.text), e5.textBaseline = "vertical" === i4 ? "alphabetic" : "middle", e5.textAlign = "vertical" === i4 ? "center" : "start", t4.forEach(function(t5) {
          u(e5, a3.labels.text, t5.formattedValue, t5.x, t5.y);
        });
      }(t3, ut2, je, g2) : "function" == typeof e4 && e4(t3, vt);
    }), t3.save());
  }, [H2, E3, M2, W3, et, me2, xe2, bt, D2, G, lt, it, rt, K, _, b2, f2, Je, qe, vt, te2, g2, dt, _e.left, _e.top, Ue, Qe, Ee2, ie2, tt, at, m2, ot, je, s, ut2, Xe2, gt, mt]);
  var pt = (0, import_react2.useCallback)(function(e3) {
    if ($e && Ne2.current) {
      var a3 = kn(Ne2.current, e3), i4 = a3[0], n4 = a3[1], l3 = ze($e, _e, i4, n4);
      void 0 !== l3 ? (ht2((0, import_react2.createElement)(Be2, U({}, l3.data, { color: l3.color, label: l3.label, value: Number(l3.data.value) })), e3), "mouseenter" === e3.type && (null == Oe2 || Oe2(l3.data, e3))) : ft2();
    }
  }, [ft2, _e, Oe2, $e, ht2, Be2]), xt = (0, import_react2.useCallback)(function(e3) {
    if ($e && Ne2.current) {
      ft2();
      var t3 = kn(Ne2.current, e3), a3 = t3[0], i4 = t3[1], n4 = ze($e, _e, a3, i4);
      n4 && (null == Te2 || Te2(n4.data, e3));
    }
  }, [ft2, _e, Te2, $e]), yt = (0, import_react2.useCallback)(function(e3) {
    if ($e && Ne2.current) {
      var t3 = kn(Ne2.current, e3), a3 = t3[0], i4 = t3[1], n4 = ze($e, _e, a3, i4);
      void 0 !== n4 && (null == Re2 || Re2(U({}, n4.data, { color: n4.color }), e3));
    }
  }, [_e, Re2, $e]);
  return (0, import_jsx_runtime2.jsx)("canvas", { ref: Rn(Ne2, De2), width: Qe * Ee2, height: Ue * Ee2, style: { width: Qe, height: Ue, cursor: We2 ? "auto" : "normal" }, onMouseEnter: We2 ? pt : void 0, onMouseMove: We2 ? pt : void 0, onMouseLeave: We2 ? xt : void 0, onClick: We2 ? yt : void 0, role: Fe2 });
};
var Ae = (0, import_react2.forwardRef)(function(e3, t3) {
  var a3 = e3.isInteractive, i3 = e3.renderWrapper, n3 = e3.theme, l2 = Z(e3, Fe);
  return (0, import_jsx_runtime2.jsx)(Fr, { isInteractive: a3, renderWrapper: i3, theme: n3, animate: false, children: (0, import_jsx_runtime2.jsx)(De, U({}, l2, { forwardedRef: t3 })) });
});
var Xe = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var Ye2 = (0, import_react2.forwardRef)(function(e3, t3) {
  var a3 = e3.defaultWidth, i3 = e3.defaultHeight, n3 = e3.onResize, l2 = e3.debounceResize, r2 = Z(e3, Xe);
  return (0, import_jsx_runtime2.jsx)($r, { defaultWidth: a3, defaultHeight: i3, onResize: n3, debounceResize: l2, children: function(e4) {
    var a4 = e4.width, i4 = e4.height;
    return (0, import_jsx_runtime2.jsx)(Ee, U({ width: a4, height: i4 }, r2, { ref: t3 }));
  } });
});
var Ge = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var Ne = (0, import_react2.forwardRef)(function(e3, t3) {
  var a3 = e3.defaultWidth, i3 = e3.defaultHeight, n3 = e3.onResize, l2 = e3.debounceResize, r2 = Z(e3, Ge);
  return (0, import_jsx_runtime2.jsx)($r, { defaultWidth: a3, defaultHeight: i3, onResize: n3, debounceResize: l2, children: function(e4) {
    var a4 = e4.width, i4 = e4.height;
    return (0, import_jsx_runtime2.jsx)(Ae, U({ width: a4, height: i4 }, r2, { ref: t3 }));
  } });
});
export {
  Ee as Bar,
  Ae as BarCanvas,
  ie as BarItem,
  le as BarTooltip,
  Te as BarTotals,
  Ye2 as ResponsiveBar,
  Ne as ResponsiveBarCanvas,
  de as canvasDefaultProps,
  re as defaultProps,
  oe as svgDefaultProps
};
//# sourceMappingURL=@nivo_bar.js.map
